# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
    # specify the version
    - image: circleci/golang:1.9

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/snowdrop/generator

    steps:
    # The checkout step will default to the working_directory we have already defined.
    - checkout

    # Get dependencies and do test
    - run:
        name: Get dependencies and do test
        command: |
          go get -v -t -d ./...
          go test -v ./...

    # Regenerate the Assets (template such crud, rest, custom, ...)
    - run:
        name: Generate assets
        command: |
          make assets

    # Build project
    - run:
        name: Perform build
        command: |
          go build -o generator *.go

  # This job needs to be in machine because it has COPY inside the Dockerfile
  # which cannot be handled in the docker type jobs
  createImage:
    machine: true

    steps:
      - checkout

      - run:
          name: Build Docker image
          command: |
            tagRE='release-(.*)'
            if [[ "${CIRCLE_TAG}" =~ ${tagRE} ]]; then
              VERSION=${BASH_REMATCH[1]}

              docker build -t spring-boot-generator:${VERSION} -f docker/Dockerfile_generator --build-arg VERSION=${VERSION} --build-arg GITCOMMIT=$(git rev-parse --short HEAD 2>/dev/null) .
              TAG_ID=$(docker images -q spring-boot-generator:${VERSION})
              docker tag ${TAG_ID} quay.io/snowdrop/spring-boot-generator:${VERSION}
              docker tag ${TAG_ID} quay.io/snowdrop/spring-boot-generator:latest
              docker login quay.io -u="${QUAY_ROBOT_USER}" -p="${QUAY_ROBOT_TOKEN}"
              docker push quay.io/snowdrop/spring-boot-generator:${VERSION}
              docker push quay.io/snowdrop/spring-boot-generator:latest

              # Remove the trigger tag
              scripts/delete_release_manually.sh "${GITHUB_API_TOKEN}" "${CIRCLE_TAG}"

              # Add the commits that correspond to the tag to the description of the GitHub reelase
              scripts/update_release_change_log.sh "${GITHUB_API_TOKEN}" "${CIRCLE_TAG}"
            else
              echo "${CIRCLE_TAG} does NOT match the expected pattern. This is probably a job configuration issue"
              exit 1
            fi

  release:
    docker:
    # specify the version
    - image: circleci/golang:1.9

    working_directory: /go/src/github.com/snowdrop/generator

    steps:
    - checkout

    - run:
        name: Install gox
        command: |
          go get github.com/mitchellh/gox

    - run:
        name: Install file
        command:
          sudo apt-get install file

    - run:
        name: Perform release
        command: |
          tagRE='release-(.*)'
          if [[ "${CIRCLE_TAG}" =~ ${tagRE} ]]; then
            # This will use gox to create the artifacts and the scripts in scripts to do the actual release
            # For the is to work, the GITHUB_API_TOKEN env var needs to be set in the CircleCI config
            make upload VERSION=${BASH_REMATCH[1]}
          else
            echo "${CIRCLE_TAG} does NOT match the expected pattern. This is probably a job configuration issue"
            exit 1
          fi

workflows:
  version: 2
  simple-build:
    jobs:
    - build
  release-build:
    jobs:
    - release:
        filters:
          tags:
            only: /^release-.*$/
          branches:
            ignore: /.*/
    - createImage:
        requires:
          - release
        filters:
          tags:
            only: /^release-.*$/
          branches:
            ignore: /.*/